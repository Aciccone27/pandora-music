**Changes made for Lab Assignment #8 (Due 03/22/22)**
        *Main Features:
                *copyied and pasted code from firebase to both files in the enviroment folder (enviroment.prod.ts and enviroment.ts) to connect code to 
                   app being created and to the angular fire library
                *increased the budget in angular.json file to relieve the error recieved
                *imported both angular fire modules (AngularFireModule and AngularFirestoreModule) in the app.component.ts file 
                   with the appropriate imports at the top as well
                *connected the angular firebase to carol.service.ts (cards folder) so that the library is utilized that way 
                   and removed all HTTP Client references within the file so that is is no longer utilized.
        
        *Bonus:
                *Connected the firebase library and removed the HTTP Client in the following service files:
                        --> albums.service.ts (cards folder)
                        --> artist.service.ts (artist folder)
                        --> album_route.service.ts (album_route folder)
                        --> songlist.service.ts (lists folder)
                        --> song_route.service.ts (song_route folder)
        





**Changes made for Lab Assignment #7 (Due 03/08/2022)**
        *Main Features:
                *Transfered the information from the following mock list into firebase
                        --> Song List from folder Lists (file mock_song_list.ts/firebase songslist)
                        
                *Created the following service file
                        -->songlist.service.ts (Lists folder)
                        
                *added the OnInit methods and removed approriate ngfor loops and mock imports for the following file:
                        -->song-route.components.ts (song_route folder)
                       
        *Bonus
                *Transfered the information from the following mock lists into firebase
                        --> Song Route List from folder song_route (file mock_song_route_list.ts/firebase songroutelist)
                        --> Carol List from Cards folder (file mock_carol_list/firebase carollist)
                        --> Album List from Cards folder (file mock_album_lists/firebase albumlist)
                        --> Artist List from Artists folder (file mock_artist_list/firebase artistlist)
                        --> Album Route List from album_route folder (file mock_album_route_list/firebase albumroutelist)

                *Created the following service files
                        -->song_route.service.ts (song_route folder)
                        -->carol.service.ts (cards folder)
                        -->albums.service.ts (cards folder)
                        -->artist.service.ts (artist folder)
                        -->album_route.service.ts (album_route folder)

                *added the OnInit methods and removed approriate ngfor loops and mock imports for the following files:
                        -->now-playing-layout.component.ts(Lists folder)
                        -->home-layout.component.ts (cards folder)
                        -->browse-layout.component.ts (cards folder)
                        -->album-route.componets.ts (album_route folder)
                        -->artist-layout.component.ts (middle navigation folder)




**Changes made for Lab Assignment #6 (Due 03/01/2022)**
        *Main Features:
                *Created new folder to hold new component
                        -->user-info
                *Created the following files inside of the user-info folder
                        -->user-info.component.css/.html/.ts
                        -->user-info.model.ts
                *attributes listed in the mock model for user-info:
                        -->FirstName
                        -->LastName
                        -->GitHub
                        -->mix_id
                *Not done in visual studio
                        -->created backend withfirebase
                        -->created realtime database and populated it with information
        *Bonus:
                 *Changed the favicon.ico to the favicon of pandora




**Changes made for Lab assignment #5**
    *created two folders to create new routing
            -->album_route
                    *album-route.component.html/css/ts
            -->song_route
                    *song-route.component.html/css/ts
    *created mock lists and item models for both components
            -->album route
                    *mock_album_route_list.ts
                    *album-route-item.model.ts
            -->song route
                    *mock_song_route_list.ts
                    *song-route-item.model.ts
    *created the following attributes for the ngfor loop 
            -->album
                    *img (image)
                    *title
                    *artists
                    *songs
                    *explicit
            -->song
                    *img
                    *title
                    *artists
                    *number
     *created carosel componet to go on multiple pages
              -->album-carol.component.html/css/ts
      * created components
             -->album
                    *cards and information about albums
                    *middle navigation bar
                    *bottom navigation bar
                    *carosel start
             -->songs
                    *list of songs
                    *middle navigation bar
                    *bottom navigation bar
                    *carosel start

        **Bonus**
    In List folder
        *created new files to hold the song icon and song title(really album cover and album title)
            -->song-title.component.html/css/ts
            -->song-icon.component.html/css/ts
        *created a mock song list (mock_song_list.ts)
        * created item model for song lists (song-list-item.model.ts)
        * 3 attributes for each song:
            --> song (title)
            --> artists
            --> time (how long the song is)
            --> number (position on the album)


